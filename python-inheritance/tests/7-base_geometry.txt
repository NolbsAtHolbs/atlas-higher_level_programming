>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry


>>> bg = BaseGeometry()
>>> bg.integer_validator("numb", 30)

>>> base_geometry = BaseGeometry()
>>> base_geometry.integer_validator("numb", None)
Traceback (most recent call last):
...
TypeError: numb must be an integer

>>> base_geometry = BaseGeometry()
>>> base_geometry.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

>>> base_geometry = BaseGeometry()
>>> base_geometry.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

>>> base_geometry = BaseGeometry()
>>> base_geometry.integer_validator("age", -1)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

>>> base_geometry = BaseGeometry()
>>> base_geometry.integer_validator("age", True)
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> base_geometry = BaseGeometry()
>>> base_geometry.integer_validator("age", {1, 2})
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> base_geometry = BaseGeometry()
>>> base_geometry.integer_validator("age", "1")
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> base_geometry = BaseGeometry()
>>> base_geometry.integer_validator("age", None)
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> base_geometry = BaseGeometry()
>>> base_geometry.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> base_geometry = BaseGeometry()
>>> base_geometry.integer_validator("age", (4,))
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> base_geometry = BaseGeometry()
>>> base_geometry.integer_validator("age", [3])
Traceback (most recent call last):
...
TypeError: age must be an integer
